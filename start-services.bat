@echo off
echo üöÄ Starting Voicera AI Microservices...
echo ================================================

echo üîÑ Killing existing Node.js processes...
taskkill /f /im node.exe >nul 2>&1

echo.
echo üì¶ Installing dependencies...

echo Installing Voice Service dependencies...
cd microservices\voice-service
call npm install --silent
cd ..\..

echo Installing User Service dependencies...
cd microservices\user-service
call npm install --silent
cd ..\..

echo Installing Analytics Service dependencies...
cd microservices\analytics-service
call npm install --silent
cd ..\..

echo Installing API Gateway dependencies...
cd microservices\api-gateway
call npm install --silent
cd ..\..

echo.
echo üöÄ Starting services in separate windows...

echo Starting Voice Service on port 3001...
start "Voice Service" cmd /k "cd microservices\voice-service && set PORT=3001 && npm start"

echo Starting User Service on port 3002...
start "User Service" cmd /k "cd microservices\user-service && set PORT=3002 && npm start"

echo Starting Analytics Service on port 3003...
start "Analytics Service" cmd /k "cd microservices\analytics-service && set PORT=3003 && npm start"

echo Starting API Gateway on port 3000...
start "API Gateway" cmd /k "cd microservices\api-gateway && set PORT=3000 && npm start"

echo.
echo ‚è≥ Waiting for services to start...
timeout /t 10 /nobreak >nul

echo.
echo üß™ Testing services...

echo Testing API Gateway...
curl -s http://localhost:3000/health >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ API Gateway - Running
) else (
    echo ‚ùå API Gateway - Not responding
)

echo Testing Voice Service...
curl -s http://localhost:3001/health >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ Voice Service - Running
) else (
    echo ‚ùå Voice Service - Not responding
)

echo Testing User Service...
curl -s http://localhost:3002/health >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ User Service - Running
) else (
    echo ‚ùå User Service - Not responding
)

echo Testing Analytics Service...
curl -s http://localhost:3003/health >nul 2>&1
if %errorlevel%==0 (
    echo ‚úÖ Analytics Service - Running
) else (
    echo ‚ùå Analytics Service - Not responding
)

echo.
echo üéâ Microservices Startup Complete!
echo ================================================
echo üìä Service URLs:
echo   ‚Ä¢ API Gateway: http://localhost:3000
echo   ‚Ä¢ Voice Service: http://localhost:3001
echo   ‚Ä¢ User Service: http://localhost:3002
echo   ‚Ä¢ Analytics Service: http://localhost:3003
echo.
echo üìö API Endpoints:
echo   ‚Ä¢ Health Check: http://localhost:3000/health
echo   ‚Ä¢ API Docs: http://localhost:3000/api/docs
echo   ‚Ä¢ Metrics: http://localhost:3000/metrics
echo.
echo üõ†Ô∏è  Management:
echo   ‚Ä¢ View logs in the opened windows
echo   ‚Ä¢ Close windows to stop services
echo   ‚Ä¢ Run this script again to restart
echo.
pause
