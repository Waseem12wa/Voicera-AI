version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: voicera-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: voicera2024
      MONGO_INITDB_DATABASE: voicera
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - voicera-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: voicera-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - voicera-network

  # Main API Server
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voicera-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MONGODB_URI=mongodb://admin:voicera2024@mongodb:27017/voicera?authSource=admin
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - GROQ_API_KEY=${GROQ_API_KEY}
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
      - redis
    networks:
      - voicera-network

  # Voice Service
  voice-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voicera-voice
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://admin:voicera2024@mongodb:27017/voicera?authSource=admin
      - REDIS_URL=redis://redis:6379
      - GROQ_API_KEY=${GROQ_API_KEY}
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - voicera-network

  # Frontend (Nginx)
  frontend:
    image: nginx:alpine
    container_name: voicera-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-server
    networks:
      - voicera-network

volumes:
  mongodb_data:
  redis_data:

networks:
  voicera-network:
    driver: bridge